// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: wishlist.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcWishlist {
  public static partial class WishlistService
  {
    static readonly string __ServiceName = "GrpcWishlist.WishlistService";

    static readonly grpc::Marshaller<global::GrpcWishlist.Ping> __Marshaller_GrpcWishlist_Ping = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcWishlist.Ping.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcWishlist.Pong> __Marshaller_GrpcWishlist_Pong = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcWishlist.Pong.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcWishlist.WishlistRequest> __Marshaller_GrpcWishlist_WishlistRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcWishlist.WishlistRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcWishlist.WishlistResponse> __Marshaller_GrpcWishlist_WishlistResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcWishlist.WishlistResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcWishlist.WishlistAddRequest> __Marshaller_GrpcWishlist_WishlistAddRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcWishlist.WishlistAddRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcWishlist.Response> __Marshaller_GrpcWishlist_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcWishlist.Response.Parser.ParseFrom);

    static readonly grpc::Method<global::GrpcWishlist.Ping, global::GrpcWishlist.Pong> __Method_GetPing = new grpc::Method<global::GrpcWishlist.Ping, global::GrpcWishlist.Pong>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPing",
        __Marshaller_GrpcWishlist_Ping,
        __Marshaller_GrpcWishlist_Pong);

    static readonly grpc::Method<global::GrpcWishlist.WishlistRequest, global::GrpcWishlist.WishlistResponse> __Method_GetWishlist = new grpc::Method<global::GrpcWishlist.WishlistRequest, global::GrpcWishlist.WishlistResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetWishlist",
        __Marshaller_GrpcWishlist_WishlistRequest,
        __Marshaller_GrpcWishlist_WishlistResponse);

    static readonly grpc::Method<global::GrpcWishlist.WishlistAddRequest, global::GrpcWishlist.Response> __Method_AddToWishList = new grpc::Method<global::GrpcWishlist.WishlistAddRequest, global::GrpcWishlist.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddToWishList",
        __Marshaller_GrpcWishlist_WishlistAddRequest,
        __Marshaller_GrpcWishlist_Response);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcWishlist.WishlistReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of WishlistService</summary>
    public abstract partial class WishlistServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::GrpcWishlist.Pong> GetPing(global::GrpcWishlist.Ping request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcWishlist.WishlistResponse> GetWishlist(global::GrpcWishlist.WishlistRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcWishlist.Response> AddToWishList(global::GrpcWishlist.WishlistAddRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for WishlistService</summary>
    public partial class WishlistServiceClient : grpc::ClientBase<WishlistServiceClient>
    {
      /// <summary>Creates a new client for WishlistService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public WishlistServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for WishlistService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public WishlistServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected WishlistServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected WishlistServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::GrpcWishlist.Pong GetPing(global::GrpcWishlist.Ping request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPing(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcWishlist.Pong GetPing(global::GrpcWishlist.Ping request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPing, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcWishlist.Pong> GetPingAsync(global::GrpcWishlist.Ping request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPingAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcWishlist.Pong> GetPingAsync(global::GrpcWishlist.Ping request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPing, null, options, request);
      }
      public virtual global::GrpcWishlist.WishlistResponse GetWishlist(global::GrpcWishlist.WishlistRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetWishlist(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcWishlist.WishlistResponse GetWishlist(global::GrpcWishlist.WishlistRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetWishlist, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcWishlist.WishlistResponse> GetWishlistAsync(global::GrpcWishlist.WishlistRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetWishlistAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcWishlist.WishlistResponse> GetWishlistAsync(global::GrpcWishlist.WishlistRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetWishlist, null, options, request);
      }
      public virtual global::GrpcWishlist.Response AddToWishList(global::GrpcWishlist.WishlistAddRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddToWishList(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcWishlist.Response AddToWishList(global::GrpcWishlist.WishlistAddRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddToWishList, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcWishlist.Response> AddToWishListAsync(global::GrpcWishlist.WishlistAddRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddToWishListAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcWishlist.Response> AddToWishListAsync(global::GrpcWishlist.WishlistAddRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddToWishList, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override WishlistServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new WishlistServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(WishlistServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetPing, serviceImpl.GetPing)
          .AddMethod(__Method_GetWishlist, serviceImpl.GetWishlist)
          .AddMethod(__Method_AddToWishList, serviceImpl.AddToWishList).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, WishlistServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetPing, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcWishlist.Ping, global::GrpcWishlist.Pong>(serviceImpl.GetPing));
      serviceBinder.AddMethod(__Method_GetWishlist, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcWishlist.WishlistRequest, global::GrpcWishlist.WishlistResponse>(serviceImpl.GetWishlist));
      serviceBinder.AddMethod(__Method_AddToWishList, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcWishlist.WishlistAddRequest, global::GrpcWishlist.Response>(serviceImpl.AddToWishList));
    }

  }
  public static partial class ItemsService
  {
    static readonly string __ServiceName = "GrpcWishlist.ItemsService";

    static readonly grpc::Marshaller<global::GrpcWishlist.ItemsRequest> __Marshaller_GrpcWishlist_ItemsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcWishlist.ItemsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcWishlist.ItemsResponse> __Marshaller_GrpcWishlist_ItemsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcWishlist.ItemsResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::GrpcWishlist.ItemsRequest, global::GrpcWishlist.ItemsResponse> __Method_GetItems = new grpc::Method<global::GrpcWishlist.ItemsRequest, global::GrpcWishlist.ItemsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetItems",
        __Marshaller_GrpcWishlist_ItemsRequest,
        __Marshaller_GrpcWishlist_ItemsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcWishlist.WishlistReflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of ItemsService</summary>
    public abstract partial class ItemsServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::GrpcWishlist.ItemsResponse> GetItems(global::GrpcWishlist.ItemsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ItemsService</summary>
    public partial class ItemsServiceClient : grpc::ClientBase<ItemsServiceClient>
    {
      /// <summary>Creates a new client for ItemsService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public ItemsServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ItemsService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public ItemsServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected ItemsServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected ItemsServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::GrpcWishlist.ItemsResponse GetItems(global::GrpcWishlist.ItemsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetItems(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcWishlist.ItemsResponse GetItems(global::GrpcWishlist.ItemsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetItems, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcWishlist.ItemsResponse> GetItemsAsync(global::GrpcWishlist.ItemsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetItemsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcWishlist.ItemsResponse> GetItemsAsync(global::GrpcWishlist.ItemsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetItems, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override ItemsServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ItemsServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(ItemsServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetItems, serviceImpl.GetItems).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ItemsServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetItems, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcWishlist.ItemsRequest, global::GrpcWishlist.ItemsResponse>(serviceImpl.GetItems));
    }

  }
}
#endregion
